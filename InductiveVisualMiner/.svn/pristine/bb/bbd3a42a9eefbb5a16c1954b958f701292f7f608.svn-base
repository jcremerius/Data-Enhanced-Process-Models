layout (location = 0) in vec2 position; //position in triangle
layout (location = 1) in vec3 color;
layout (location = 2) in vec2 offset;
layout (location = 3) in float opacity;

uniform vec2 imageSize;
uniform vec2 userScale;
uniform vec2 userTranslate;

out vec4 fColor;

void toDevice(in vec2 imageCoordinates, in vec2 imageSize, out vec2 deviceCoordinates) {
	deviceCoordinates = vec2((imageCoordinates / imageSize) * 2 - 1);
}

void toImage(in vec2 modelCoordinates, in vec2 userScale, in vec2 userTranslate, out vec2 imageCoordinates) {
	imageCoordinates = vec2(modelCoordinates * userScale + userTranslate);
}  

void main()
{   
    vec2 image;
    toImage(position + offset, userScale, userTranslate, image);
        
    vec2 device;
   	toDevice(image, imageSize, device);
   	
    gl_Position = vec4(device, 0, 1);
    
    fColor = vec4(color, opacity);
}